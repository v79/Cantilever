
[versions]
# Kotlin and plugins
kotlin = "2.2.0"
kotlin-serialization = "2.1.21"
ksp = "2.2.0-2.0.2"
shadow = "7.1.2"
kover = "0.9.1"
coroutines = "1.10.2"

# AWS
aws-cdk = "2.206.0"
aws-constructs = "10.4.2"
aws-sdk = "2.32.19"
aws-lambda-core = "1.3.0"
aws-lambda-events = "3.16.0"
aws-lambda-tests = "1.1.1"
aws-lambda-log4j2 = "1.6.0"

# Logging
slf4j = "2.0.17"
log4j = "2.25.1"
log4j-layout-template-json = "2.25.1"

# Kotlinx libraries
kotlinx-datetime = "0.4.1"
kotlinx-serialization-json = "1.6.2"

# Testing
junit = "5.11.3"
mockk = "1.13.14"
koin-core = "3.4.0"
koin-test = "3.3.3"
kotlin-test = "2.2.0"
testcontainers = "1.21.3"

# APIViaduct
api-viaduct = "0.4.1-SNAPSHOT"

# Other libraries
kaml = "0.55.0"
handlebars = "4.3.1"
java-jwt = "4.3.0"
jwks-rsa = "0.22.0"
imgscalr = "4.2"

[libraries]
# Kotlin
kotlin-stdlib = { module = "org.jetbrains.kotlin:kotlin-stdlib", version.ref = "kotlin" }
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
kotlin-test-junit5 = { module = "org.jetbrains.kotlin:kotlin-test-junit5", version.ref = "kotlin" }
kotlin-ksp = { module = "com.google.devtools.ksp:symbol-processing-api", version.ref = "ksp" }
kotlin-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
kotlin-coroutines-jdk = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-jdk8", version.ref = "coroutines" }

# AWS CDK
aws-cdk-lib = { module = "software.amazon.awscdk:aws-cdk-lib", version.ref = "aws-cdk" }
aws-constructs = { module = "software.constructs:constructs", version.ref = "aws-constructs" }

# AWS SDK
aws-sdk-bom = { module = "software.amazon.awssdk:bom", version.ref = "aws-sdk" }
aws-sdk-s3 = { module = "software.amazon.awssdk:s3" }
aws-sdk-lambda = { module = "software.amazon.awssdk:lambda" }
aws-sdk-sqs = { module = "software.amazon.awssdk:sqs" }
aws-sdk-dynamodb = { module = "software.amazon.awssdk:dynamodb" }

# AWS Lambda
aws-lambda-core = { module = "com.amazonaws:aws-lambda-java-core", version.ref = "aws-lambda-core" }
aws-lambda-events = { module = "com.amazonaws:aws-lambda-java-events", version.ref = "aws-lambda-events" }
aws-lambda-tests = { module = "com.amazonaws:aws-lambda-java-tests", version.ref = "aws-lambda-tests" }
aws-lambda-log4j2 = { module = "com.amazonaws:aws-lambda-java-log4j2", version.ref = "aws-lambda-log4j2" }

# Logging
slf4j-api = { module = "org.slf4j:slf4j-api", version.ref = "slf4j" }
log4j-slf4j2-impl = { module = "org.apache.logging.log4j:log4j-slf4j2-impl", version.ref = "log4j" }
log4j-api = { module = "org.apache.logging.log4j:log4j-api", version.ref = "log4j" }
log4j-core = { module = "org.apache.logging.log4j:log4j-core", version.ref = "log4j" }
log4j-layout-template-json = { module = "org.apache.logging.log4j:log4j-layout-template-json", version.ref = "log4j-layout-template-json" }

# Kotlin libraries
kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinx-datetime" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx-serialization-json" }

# Testing
junit-jupiter = { module = "org.junit.jupiter:junit-jupiter", version.ref = "junit" }
junit-api = { module = "org.junit.jupiter:junit-jupiter-api", version.ref = "junit" }
junit-engine = { module = "org.junit.jupiter:junit-jupiter-engine", version.ref = "junit" }
mockk = { module = "io.mockk:mockk", version.ref = "mockk" }
koin-core = { module = "io.insert-koin:koin-core", version.ref = "koin-core" }
koin-test = { module = "io.insert-koin:koin-test", version.ref = "koin-test" }
koin-test-junit5 = { module = "io.insert-koin:koin-test-junit5", version.ref = "koin-test" }
testcontainers = { module = "org.testcontainers:testcontainers", version.ref = "testcontainers" }
localstack = { module = "org.testcontainers:localstack", version.ref = "testcontainers" }
localstack-junit = { module = "org.testcontainers:junit-jupiter", version.ref = "testcontainers" }

# APIViaduct
viaduct-router = { module = "org.liamjd.apiviaduct:router", version.ref = "api-viaduct" }
viaduct-openapi = { module = "org.liamjd.apiviaduct:openapi", version.ref = "api-viaduct" }

# Other libraries
kaml = { module = "com.charleskorn.kaml:kaml", version.ref = "kaml" }
handlebars = { module = "com.github.jknack:handlebars", version.ref = "handlebars" }
java-jwt = { module = "com.auth0:java-jwt", version.ref = "java-jwt" }
jwks-rsa = { module = "com.auth0:jwks-rsa", version.ref = "jwks-rsa" }
imgscalr = { module = "org.imgscalr:imgscalr-lib", version.ref = "imgscalr" }

[bundles]
logging = [
  "slf4j-api",
  "log4j-slf4j2-impl",
  "log4j-api",
  "log4j-core",
  "log4j-layout-template-json"
]
aws-lambda = [
  "aws-lambda-core",
  "aws-lambda-events",
  "aws-lambda-tests",
  "aws-lambda-log4j2"
]
aws-sdk = [
  "aws-sdk-dynamodb",
  "aws-sdk-s3",
  "aws-sdk-lambda",
  "aws-sdk-sqs"
]
koin-test = [
  "koin-core",
  "koin-test",
  "koin-test-junit5"
]
testcontainers = [
  "testcontainers",
  "localstack",
  "localstack-junit"
]

[plugins]
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin-serialization" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
shadow = { id = "com.github.johnrengelman.shadow", version.ref = "shadow" }
kover = { id = "org.jetbrains.kotlinx.kover", version.ref = "kover" }